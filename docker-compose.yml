version: '3.8'
services:
#web service app
  app:
    build: .
    image: django_project 
    container_name: django_container
    #mount
    volumes:
      - .:/django
    ports:
      - 8000:8000
    command: "gunicorn djangotest.wsgi:application -b 0.0.0.0:8000"
    restart: always
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - CELERY_BROKER=${CELERY_BROKER}
      - CELERY_BACKEND=${CELERY_BACKEND}
    depends_on:
      - db
      - redis

#postgress db
  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 5000:5000
    expose:
      - 5000

    container_name: postgres_db
    restart: always

  celery:
    build: .
    image: celery_app
    container_name: celery_container
    volumes:
      - .:/django
    command: "celery -A djangotest worker --loglevel=INFO"
    restart: always
    ports:
      - 8080:8080
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - CELERY_BROKER=${CELERY_BROKER}
      - CELERY_BACKEND=${CELERY_BACKEND}
    depends_on:
      - redis
      - app
    
  redis:
    image: redis:alpine
    container_name: redis_container
    restart: always
    volumes:
      - redis_data:/data
    expose:
      - 6379
    ports:
      - 6379:6379

volumes:
  redis_data:
  postgres_data:



    

    